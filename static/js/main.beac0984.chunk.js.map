{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","Scroll.js","B-roll.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","Scroll","style","overflowY","border","height","children","Broll","state","searchField","console","log","fetch","then","response","json","users","setState","this","filteredMonsters","filter","toLowerCase","includes","toLocaleLowerCase","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ySAGaA,G,MAAO,SAACC,GAAD,OAEd,sBAAKC,UAAU,iBAAf,UACM,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,mCAAOL,EAAMI,QAAQE,KAArB,OACA,4BAAIN,EAAMI,QAAQG,aCFjBC,G,MAAW,SAAAR,GAAK,OACvB,qBAAKC,UAAU,YAAf,SACOD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OACrB,cAAC,EAAD,CAAuBA,QAAUA,GAAtBA,EAAQC,WCNxBM,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACnB,uBACMZ,UAAU,SACVa,KAAK,SAASF,YAAaA,EAC3BG,SAAUF,MCGPG,EARA,SAAChB,GACV,OACM,qBAAKiB,MAAO,CAAEC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAAtE,SACOpB,EAAMqB,YCoDVC,G,wDAjDb,aAAe,IAAD,8BACZ,gBAEKC,MAAQ,CACXd,SAAU,GACVe,YAAa,IAGfC,QAAQC,IAAI,eARA,E,gEAWO,IAAD,OAClBC,MAAM,6CACHC,MAAK,SAAAC,GAAQ,OACZA,EAASC,UACVF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAAEvB,SAAUsB,OAE3CN,QAAQC,IAAI,uB,+BAMJ,IAAD,SAE2BO,KAAKV,MAA/Bd,EAFD,EAECA,SAAUe,EAFX,EAEWA,YACZU,EAAmBzB,EAAS0B,QAAO,SAAA/B,GAAO,OAC9CA,EAAQE,KAAK8B,cAAcC,SAASb,EAAYc,wBAIlD,OADAb,QAAQC,IAAI,UAEV,sBAAKzB,UAAU,MAAf,UACE,oDAEA,cAAC,EAAD,CACEW,YAAY,kBACZC,aAAc,SAAA0B,GAAC,OACb,EAAKP,SAAS,CAAER,YAAae,EAAEC,OAAOC,WAC1C,cAAC,EAAD,UACE,cAAC,EAAD,CAAUhC,SAAUyB,a,GAzCVQ,cCKLC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.beac0984.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css';\r\n\r\nexport const Card = (props) => (\r\n\r\n      <div className='card-container'>\r\n            <img alt='monster' src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} />\r\n            <h2 > {props.monster.name} </h2>\r\n            <p>{props.monster.email}</p>\r\n      </div>\r\n);","import React from 'react';\r\n\r\nimport { Card } from '../card/card.component';\r\n\r\nimport './card-list.styles.css';\r\n\r\nexport const CardList = props => (\r\n      <div className='card-list'>\r\n            {props.monsters.map(monster => (\r\n                  <Card key={monster.id} monster={ monster }/>\r\n            ))}\r\n\r\n      </div>\r\n      \r\n);\r\n","import React from 'react';\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = ({ placeholder, handleChange }) => (\r\n      <input\r\n            className='search'\r\n            type='search' placeholder={placeholder}\r\n            onChange={handleChange}\r\n      />\r\n);\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n      return (\r\n            <div style={{ overflowY: 'scroll', border: '3px solid black', height: '800px' }}>\r\n                  {props.children}\r\n            </div>\r\n      );\r\n};\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\nimport { CardList } from './components/card-list/card-list.component';\r\nimport { SearchBox } from './components/search-box/search-box.component';\r\nimport Scroll from './Scroll';\r\nimport './App.css';\r\n\r\n/*adding state with class component...*/\r\nclass Broll extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      monsters: [],\r\n      searchField: ''\r\n    };\r\n    //order of execution...\r\n    console.log('constructor');\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch('http://jsonplaceholder.typicode.com/users')\r\n      .then(response =>\r\n        response.json())\r\n      .then(users => this.setState({ monsters: users }));\r\n    // when the state updated from what was fetched...\r\n    console.log('componentDidMount');\r\n  }\r\n\r\n\r\n  /**Remmember, this render method is already provided \r\n   * we just come above it to make the function component */\r\n  render() {\r\n    // Destructuring the state...\r\n    const { monsters, searchField } = this.state;\r\n    const filteredMonsters = monsters.filter(monster =>\r\n      monster.name.toLowerCase().includes(searchField.toLocaleLowerCase())\r\n    );\r\n    // for deveopment...\r\n    console.log('render');\r\n    return (\r\n      <div className=\"App\">\r\n        <h1> Monsters Rolodex </h1>\r\n\r\n        <SearchBox\r\n          placeholder='search monsters'\r\n          handleChange={e =>\r\n            this.setState({ searchField: e.target.value })} />\r\n        <Scroll>\r\n          <CardList monsters={filteredMonsters} />\r\n        </Scroll>\r\n\r\n      </div>\r\n    );\r\n\r\n  }\r\n}\r\n\r\nexport default Broll;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Broll from './B-roll';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Broll />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}